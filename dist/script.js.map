{"version":3,"sources":["script.js"],"names":["valPercent","mySlider","document","getElementById","output","querySelector","clipBoard","btn","pwDisplay","uppercaseInput","lowercaseInput","numberInput","symbolInput","indicator","eg","lowercaseArray","join","toLowerCase","split","uppercaseArray","toUpperCase","symbolsArray","numbersArray","generatePassword","value","uppercaseChecked","checked","lowercaseChecked","symbolsChecked","numberChecked","passwordLength","selectedOptionsArray","possibleCombo","generatedPass","console","log","arr","numberOfCheckedInputs","querySelectorAll","length","undefined","push","x","i","Math","floor","random","Toastify","text","gravity","duration","position","close","style","background","color","fontWeight","showToast","innerHTML","slider","max","concat","textContent","addEventListener","navigator","clipboard","writeText","then","err","alert"],"mappings":"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","file":"script.js","sourcesContent":["const mySlider = document.getElementById(\"range_input\");\r\nlet valPercent;\r\nlet output = document.querySelector('#output_value')\r\n\r\nconst clipBoard = document.querySelector('#clipboard');\r\nconst btn = document.querySelector('.generate_button')\r\nlet pwDisplay = document.querySelector('#generated-password-area')\r\nconst uppercaseInput = document.querySelector('.uppercase')\r\nconst lowercaseInput = document.querySelector('.lowercase')\r\nconst numberInput = document.querySelector('.number')\r\nconst symbolInput = document.querySelector('.symbol')\r\nconst indicator = document.querySelector('.indicator')\r\n\r\nconst eg = [ 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L',\r\n'M', 'N', 'O', 'P', 'Q', 'R',  'S', 'T', 'U', 'V', 'W', 'X',\r\n    'Y', 'Z']\r\nconst lowercaseArray = eg.join('').toLowerCase().split(' ')\r\nconst uppercaseArray = eg.join('').toUpperCase().split(' ')\r\nconst symbolsArray = ['~`|!@#$%^&*()_-+=.,']\r\nconst numbersArray = ['0123456789']\r\n\r\n// let iteration = lowerCaseArray.length + upperCaseArrayMain.length + symbolsArray.length + nubersArray.length;\r\n// console.log(iteration);\r\n\r\n// let selectedItems = [{\r\n//     name: 'lowercase',\r\n//     possibleOutcome: lowercaseArray\r\n// }, {\r\n//     name: 'uppercase',\r\n//     possibleOutcome: uppercaseArray\r\n// }, {\r\n//     name: 'symbols',\r\n//     possibleOutcome: symbolsArray\r\n// }, {\r\n//     name: 'number',\r\n//     possibleOutcome: numbersArray\r\n//     }];\r\n// console.log(selectedItems[0].possibleOutcome);\r\n\r\n\r\n\r\n\r\n\r\nlet generatePassword = () => {\r\n    pwDisplay.value = ''\r\n\r\n    const uppercaseChecked = uppercaseInput.checked \r\n    const lowercaseChecked = lowercaseInput.checked\r\n    const symbolsChecked = symbolInput.checked\r\n    const numberChecked = numberInput.checked\r\n\r\n\r\n    let passwordLength = mySlider.value;\r\n    let randomNumber = (arr) => {\r\n        return Math.floor(Math.random() * arr.length);\r\n    }\r\n    let selectedOptionsArray = [];\r\n    let possibleCombo = '';\r\n    \r\n\r\n    let generatedPass = [];\r\n    console.log(passwordLength);\r\n    let numberOfCheckedInputs = document.querySelectorAll('input[type=\"checkbox\"]:checked').length ? undefined : 0;\r\n    // let checkedInputs = document.querySelectorAll('input[type=\"checkbox\"]:checked')\r\n\r\n\r\n\r\n    if (passwordLength >= 4 && numberOfCheckedInputs !== 0) {\r\n\r\n        if (uppercaseChecked) selectedOptionsArray.push(uppercaseArray)\r\n        if (lowercaseChecked) selectedOptionsArray.push(lowercaseArray)\r\n        if (symbolsChecked) selectedOptionsArray.push(symbolsArray)\r\n        if (numberChecked) selectedOptionsArray.push(numbersArray)\r\n\r\n        for (let x = 0; x < selectedOptionsArray.length; x++) {\r\n           \r\n            possibleCombo += selectedOptionsArray[x]\r\n        \r\n        }\r\n\r\n        generatedPass.push(possibleCombo)\r\n        generatedPass = generatedPass.join('')\r\n\r\n        for (let i = 0; i < passwordLength; i++) {\r\n            pwDisplay.value += generatedPass[randomNumber(generatedPass)]\r\n    \r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        // console.log(possibleCombo);\r\n        // console.log(generatedPass);\r\n        // console.log(selectedOptionsArray);\r\n    } else if (passwordLength < 4) {\r\n        // alert('minimum of 4 characters to be generated !!')\r\n        Toastify({\r\n            text: \"minimum of 4 characters to be generated ðŸ˜‰\",\r\n            gravity: \"top\",\r\n            duration: 3000,\r\n            position: 'right',\r\n            close: true,\r\n            style: {\r\n                background: \"linear-gradient(to right, #A4FFAF, #A4FFAa)\",\r\n                color: \"#000\",\r\n                fontWeight: 700,\r\n            }\r\n          }).showToast();\r\n    } else if (numberOfCheckedInputs === 0 || undefined) {\r\n        // alert ('select format for password generation')\r\n        Toastify({\r\n            text: \"select format for password generation ðŸ˜’\",\r\n            gravity: \"top\",\r\n            duration: 3000,\r\n            position: 'right',\r\n            close: true,\r\n            style: {\r\n                background: \"linear-gradient(to right, #A4FFAF, #A4FFAa)\",\r\n                color: \"#000\",\r\n                fontWeight: 700,\r\n            }\r\n          }).showToast();\r\n    }\r\n\r\n\r\n\r\n\r\n    // let crossCheck = (selectedCombination, array) => {\r\n    //     let sampleArray = [];\r\n    //     sampleArray = pwDisplay.value.split('')\r\n\r\n    //     for (let y = 0; y < array.length; y++) \r\n    //     if (selectedCombination === true && !pwDisplay.value.includes(array[y])) {\r\n    //         pwDisplay.value.substring(0, 1).replace(/^0+/g, '');           \r\n    //         } \r\n\r\n    // }\r\n\r\n    \r\n    let displayStrength = () => {\r\n        indicator.innerHTML = ''\r\n        if (passwordLength <= 7 && pwDisplay.value !== '') {\r\n            indicator.innerHTML += `\r\n            <p class=\"text\">small</p>\r\n            <span style=\"background-color: #d90429;\"></span>\r\n            <span style=\"background-color: #d90429;\"></span>\r\n            <span></span>\r\n            <span></span>\r\n            `\r\n        } else if (passwordLength > 7 && passwordLength <= 10 && pwDisplay.value !== '') {\r\n            indicator.innerHTML += `\r\n            <p class=\"text\">medium</p>\r\n            <span style=\"background-color: #F9CD69;\"></span>\r\n            <span style=\"background-color: #F9CD69;\"></span>\r\n            <span style=\"background-color: #F9CD69;\"></span>\r\n            <span></span>\r\n            `\r\n        } else if (passwordLength > 10 && pwDisplay.value !== '') {\r\n            indicator.innerHTML += `\r\n            <p class=\"text\">strong</p>\r\n            <span style=\"background-color: #38b000;\"></span>\r\n            <span style=\"background-color: #38b000;\"></span>\r\n            <span style=\"background-color: #38b000;\"></span>\r\n            <span style=\"background-color: #38b000;\"></span>\r\n            `\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    // crossCheck(uppercaseChecked, uppercaseArray);\r\n    // crossCheck(lowercaseChecked, lowercaseArray);\r\n    // crossCheck(symbolsChecked, symbolsArray);\r\n    // crossCheck(numberChecked, numbersArray);\r\n    displayStrength();\r\n}\r\n\r\nclipBoard.addEventListener('click', () => {\r\n    let text = pwDisplay.value;\r\n\r\n    if (pwDisplay.value !== '') {\r\n\r\n        navigator.clipboard\r\n        .writeText(text)\r\n        .then(() => {\r\n            // alert(\"Text copied to clipboard\");\r\n            Toastify({\r\n                text: \"Password copied to clipboard !\",\r\n                gravity: \"top\",\r\n                duration: 2000,\r\n                position: 'right',\r\n                style: {\r\n                    background: \"linear-gradient(to right, #A4FFAF, #A4FFAa)\",\r\n                    color: \"#000\",\r\n                    fontWeight: 700,\r\n                }\r\n              }).showToast();\r\n        })\r\n        .catch((err) => {\r\n            alert(\"Error in copying text: \", err);\r\n        });\r\n    } else {\r\n        // alert('Nothing to copy here !')\r\n        Toastify({\r\n            text: \"Nothing to copy here !\",\r\n            gravity: \"top\",\r\n            duration: 2000,\r\n            position: 'right',\r\n            style: {\r\n                background: \"linear-gradient(to right, #A4FFAF, #A4FFAa)\",\r\n                color: \"#000\",\r\n                fontWeight: 700,\r\n            }\r\n          }).showToast();\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nfunction slider() {\r\n    valPercent = (mySlider.value / mySlider.max)*100;\r\n    mySlider.style.background = `linear-gradient(to right, #A4FFAF ${valPercent}%, #000 ${valPercent}%)`;\r\n    output.textContent = mySlider.value\r\n}\r\nslider();"]}